basePath: /api/v1
definitions:
  controllers.GenerateHashRequest:
    properties:
      public_key:
        type: string
    required:
    - public_key
    type: object
  controllers.GenerateHashResonse:
    properties:
      hashed_public_key:
        type: string
      type:
        type: string
    type: object
  controllers.PortfolioAddresses:
    properties:
      btc:
        items:
          type: string
        type: array
      evm:
        items:
          type: string
        type: array
      sol:
        items:
          type: string
        type: array
    type: object
  controllers.TokenResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  controllers.VerifyRequest:
    properties:
      hashed_public_key:
        type: string
      public_key:
        type: string
    required:
    - hashed_public_key
    - public_key
    type: object
  errors.APIError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  models.BitcoinAddressInfo:
    properties:
      address_id:
        type: integer
      balance:
        type: number
      btc_asset_id:
        type: integer
      created_at:
        type: string
      first_tx:
        type: string
      last_tx:
        type: string
      received:
        type: number
      sent:
        type: number
      tx_count:
        type: integer
      unconfirmed_received:
        type: number
      unconfirmed_sent:
        type: number
      unconfirmed_tx_count:
        type: integer
      unspent_tx_count:
        type: integer
      updated_at:
        type: string
    type: object
  models.BitcoinBtcComV1:
    properties:
      bitcoin_address_info:
        $ref: '#/definitions/models.BitcoinAddressInfo'
      btc_asset_id:
        description: Primary key
        type: integer
      btc_usd_price:
        type: number
      coingecko_price_feed:
        $ref: '#/definitions/models.CoingeckoPriceFeed'
      created_at:
        type: string
      updated_at:
        type: string
      wallet_id:
        description: Foreign key to global_wallets
        type: integer
    type: object
  models.ChainDetails:
    properties:
      chian_id:
        type: integer
      community_id:
        type: integer
      created_at:
        type: string
      id:
        type: string
      logo_url:
        type: string
      name:
        type: string
      native_token_id:
        type: string
      updated_at:
        type: string
      usd_value:
        type: number
      wallet_id:
        type: integer
      wrapped_token_id:
        type: string
    type: object
  models.CoingeckoPriceFeed:
    properties:
      created_at:
        type: string
      currency:
        type: string
      id:
        description: database id
        type: integer
      name:
        type: string
      price:
        type: number
      updated_at:
        type: string
    type: object
  models.EvmAssetsDebankV1:
    properties:
      chain_list_json:
        type: string
      created_at:
        type: string
      evm_asset_id:
        description: Primary key
        type: integer
      nft_list:
        items:
          $ref: '#/definitions/models.NFTList'
        type: array
      token_list:
        items:
          $ref: '#/definitions/models.TokenList'
        type: array
      total_usd_value:
        type: number
      updated_at:
        type: string
      wallet_id:
        description: Foreign key to global_wallets
        type: integer
    type: object
  models.GlobalWallet:
    properties:
      api_endpoint:
        type: string
      api_version:
        type: string
      bitcoin_btc_com_v1:
        $ref: '#/definitions/models.BitcoinBtcComV1'
      blockchain_type:
        type: string
      chain_details:
        items:
          $ref: '#/definitions/models.ChainDetails'
        type: array
      evm_assets_debank_v1:
        $ref: '#/definitions/models.EvmAssetsDebankV1'
      last_updated_at:
        type: string
      portfolio_id:
        type: integer
      solana_assets_moralis_v1:
        allOf:
        - $ref: '#/definitions/models.SolanaAssetsMoralisV1'
        description: relations use in json responses (optional)
      wallet_address:
        type: string
      wallet_id:
        type: integer
    type: object
  models.NFT:
    properties:
      amount_raw:
        type: string
      associated_token_address:
        type: string
      created_at:
        type: string
      decimals:
        type: string
      mint:
        type: string
      name:
        type: string
      nft_id:
        type: integer
      solana_asset_id:
        type: integer
      symbol:
        type: string
      updated_at:
        type: string
    type: object
  models.NFTList:
    properties:
      amount:
        type: integer
      chain:
        type: string
      collection_id:
        type: string
      content:
        type: string
      content_type:
        type: string
      contract_id:
        type: string
      contract_name:
        type: string
      created_at:
        type: string
      description:
        type: string
      detail_url:
        type: string
      evm_asset_id:
        type: integer
      id:
        description: nft id
        type: string
      inner_id:
        type: string
      is_erc1155:
        type: boolean
      name:
        type: string
      nft_id:
        description: database id
        type: integer
      thumbnail_url:
        type: string
      total_supply:
        type: integer
      updated_at:
        description: |-
          Attributes   json.RawMessage `gorm:"type:jsonb" json:"attributes"`
          PayToken     json.RawMessage `gorm:"type:jsonb" json:"pay_token"`
        type: string
      usd_price:
        type: number
    type: object
  models.SolanaAssetsMoralisV1:
    properties:
      coingecko_price_feed:
        $ref: '#/definitions/models.CoingeckoPriceFeed'
      lamports:
        type: string
      last_updated_at:
        type: string
      nfts:
        items:
          $ref: '#/definitions/models.NFT'
        type: array
      solana:
        type: string
      solana_asset_id:
        type: integer
      tokens:
        description: relations use in json responses (optional)
        items:
          $ref: '#/definitions/models.Token'
        type: array
      total_nfts_count:
        type: integer
      total_tokens_count:
        type: integer
      wallet_id:
        type: integer
    type: object
  models.Token:
    properties:
      amount:
        type: string
      amount_raw:
        type: string
      associated_token_address:
        type: string
      created_at:
        type: string
      decimals:
        type: string
      mint:
        type: string
      name:
        type: string
      solana_asset_id:
        type: integer
      symbol:
        type: string
      token_id:
        type: integer
      updated_at:
        type: string
    type: object
  models.TokenList:
    properties:
      amount:
        type: number
      chain:
        type: string
      created_at:
        type: string
      decimals:
        type: integer
      display_symbol:
        type: string
      evm_asset_id:
        type: integer
      id:
        description: token id
        type: string
      is_core:
        type: boolean
      is_verified:
        type: boolean
      is_wallet:
        type: boolean
      logo_url:
        type: string
      name:
        type: string
      optimized_symbol:
        type: string
      price:
        type: number
      price_24h_change:
        type: number
      protocol_id:
        type: string
      raw_amount:
        type: number
      raw_amount_hex_str:
        type: string
      symbol:
        type: string
      time_at:
        type: number
      token_id:
        description: database id
        type: integer
      updated_at:
        type: string
    type: object
  responses.ChainsResponse:
    properties:
      asset_id:
        type: string
      asset_percentage:
        type: number
      asset_symbol:
        type: string
      chain:
        type: string
      is_verified:
        type: boolean
      quantity:
        type: number
      total_price:
        type: number
      unit_price:
        type: number
      wallet_id:
        type: integer
    type: object
  responses.PortfolioResponse:
    properties:
      asset_symbol:
        type: string
      chains_info:
        items:
          $ref: '#/definitions/responses.ChainsResponse'
        type: array
      portfolio_percentage:
        type: number
      quantity:
        type: number
      total_price:
        type: number
      unit_price:
        type: number
    type: object
host: localhost:5050
info:
  contact:
    email: help@0xbase.org
    name: 0xSantos
    url: http://www.0xbase.org
  description: This is Portfolio server API documentation.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: 0xBase-Corp API
  version: "1.0"
paths:
  /api/v1/all-portfolio:
    post:
      consumes:
      - application/json
      description: Retrieves information for all portfolios including Bitcoin, Solana,
        and EVM addresses.
      parameters:
      - description: Portfolio Addresses
        in: body
        name: addresses
        required: true
        schema:
          $ref: '#/definitions/controllers.PortfolioAddresses'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.PortfolioResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Fetch all portfolio information
      tags:
      - portfolio
  /generate-hash:
    post:
      consumes:
      - application/json
      description: Generate the hash for authorization
      parameters:
      - description: GenerateHashRequest object
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.GenerateHashRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.GenerateHashResonse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Generate the hash for authorization
      tags:
      - auth
  /portfolio/btc:
    get:
      consumes:
      - application/json
      description: Retrieves information for a given Bitcoin address using the BTC.com
        API.
      parameters:
      - description: Bitcoin Addresses
        format: string
        in: query
        name: addresses
        required: true
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.PortfolioResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Fetch Bitcoin Wallet Information
      tags:
      - bitcoin
  /portfolio/btc-wallet/{wallet_id}:
    get:
      consumes:
      - application/json
      description: Retrieve BTC portfolio details, including BitcoinAddressInfo, for
        a specific wallet.
      parameters:
      - description: Wallet ID
        format: int
        in: path
        name: wallet_id
        required: true
        type: integer
      - description: Pagination offset
        format: int
        in: query
        name: offset
        type: integer
      - description: Pagination limit
        format: int
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GlobalWallet'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Get BTC portfolio for a wallet
      tags:
      - bitcoin
  /portfolio/debank:
    get:
      consumes:
      - application/json
      description: Retrieves information for a given Debank address using the BTC.com
        API.
      parameters:
      - description: Debank Address
        format: string
        in: query
        name: addresses
        required: true
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.PortfolioResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Fetch Debank Wallet Information
      tags:
      - debank
  /portfolio/solana:
    get:
      consumes:
      - application/json
      description: Fetch Solana portfolio details, including tokens and NFTs, for
        a specific Solana address.
      parameters:
      - description: Solana Addresses
        format: string
        in: query
        name: addresses
        required: true
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.PortfolioResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Fetch Solana portfolio details for a given Solana address
      tags:
      - solana
  /portfolio/solana-wallet/{wallet_id}:
    get:
      consumes:
      - application/json
      description: Retrieve Solana portfolio details, including tokens and NFTs, for
        a specific wallet.
      parameters:
      - description: Wallet ID
        format: int
        in: path
        name: wallet_id
        required: true
        type: integer
      - description: Pagination offset
        format: int
        in: query
        name: offset
        type: integer
      - description: Pagination limit
        format: int
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GlobalWallet'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Get Solana portfolio for a wallet
      tags:
      - solana
  /verify-hash:
    post:
      consumes:
      - application/json
      description: Verify the hash for authorization
      parameters:
      - description: VerifyRequest object
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.VerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Verify the hash for authorization
      tags:
      - auth
swagger: "2.0"
